seed_everything: 38
trainer:

  default_root_dir: ./results/image_all_disease_classification_47
  accelerator: cuda
  devices: 1
  log_every_n_steps: 1
  max_epochs: 100

  callbacks:
  - class_path: lightning.pytorch.callbacks.RichProgressBar
  - class_path: lightning.pytorch.callbacks.EarlyStopping
    init_args:
        monitor: 'val_loss'
        patience: 5
        mode: 'min'  # or 'max' depending on your metric
  - class_path: lightning.pytorch.callbacks.ModelCheckpoint
    init_args:
        monitor: 'val_loss'
        mode: 'min'  # or 'max' depending on your metric
        save_top_k: 1  # save only the best checkpoint
        dirpath: './results/image_all_disease_classification_47/checkpoints/'
        filename: 'best_val_loss-{epoch:02d}-{val_loss:.4f}'
  

data: # data.module.DataModule
  train_dataset:
    class_path: torch.utils.data.ConcatDataset
    init_args:
      datasets:
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/MIMIC/mimic_train_df.csv
            path_image: /datasets/mimic-cxr/physionet.org/files/mimic-cxr-jpg/2.0.0/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.RandomHorizontalFlip
                - class_path: torchvision.transforms.RandomRotation
                  init_args:
                    degrees: 15
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/CheXpert/cxp_train_df.csv
            path_image: /datasets/chexpert/CheXpert-v1.0-small/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.RandomHorizontalFlip
                - class_path: torchvision.transforms.RandomRotation
                  init_args:
                    degrees: 15
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]

  val_dataset:
    class_path: torch.utils.data.ConcatDataset
    init_args:
      datasets:
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/MIMIC/mimic_validation_df.csv
            path_image: /datasets/mimic-cxr/physionet.org/files/mimic-cxr-jpg/2.0.0/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/CheXpert/cxp_validation_df.csv
            path_image: /datasets/chexpert/CheXpert-v1.0-small/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]
  test_dataset:
    class_path: torch.utils.data.ConcatDataset
    init_args:
      datasets:
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/MIMIC/mimic_test_df.csv
            path_image: /datasets/mimic-cxr/physionet.org/files/mimic-cxr-jpg/2.0.0/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]
        - class_path: data.image.dataset_class.ImageXrayDataset
          init_args:
            dataframe_path: ./dataset/CheXpert/cxp_test_df.csv
            path_image: /datasets/chexpert/CheXpert-v1.0-small/
            transform:
              class_path: torchvision.transforms.Compose
              init_args:
                transforms:
                - class_path: torchvision.transforms.Resize
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.CenterCrop
                  init_args:
                    size: 256
                - class_path: torchvision.transforms.ToTensor
                - class_path: torchvision.transforms.Normalize
                  init_args:
                    mean: [0.485, 0.456, 0.406]
                    std: [0.229, 0.224, 0.225]

  batch_size: 48
  num_workers: 38
  prediction_on: "test"


model: # models.module.CLS
  model:
    class_path: models.image.models.DensNetWithHead
    init_args:
      hidden_layer_sizes: [768,256]
      dropout_rate: 0.1
      num_classes: 14
  criterion: # torch.nn.BCEWithLogitsLoss
    class_path: torch.nn.BCEWithLogitsLoss
  weight_decay: 0.0005
  prediction_on: "test"
  save_probabilities_path: ./results/image_all_disease_classification_47/probabilities